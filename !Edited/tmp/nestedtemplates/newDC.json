{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {

        "domainName": {
            "type": "string",
            "defaultValue": "otto.local",
            "metadata": {
                "description": "The FQDN of the Active Directory Domain to be created"
            }
        },
        "advmSize": {
            "type": "string",
            "defaultValue": "Standard_D2s_v3",
            "metadata": {
                "description": "Size of the ADVM for the controller"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources."
            }
        },
        "virtualMachineName": {
            "type": "string",
            "defaultValue": "VMname",
            "metadata": {
                "description": "Virtual machine name."
            }
        },
        "virtualNetworkAddressRange": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Virtual network address range."
            }
        },
        "privateIPAddress": {
            "type": "string",
            "defaultValue": "10.0.0.4",
            "metadata": {
                "description": "Private IP address."
            }
        },
        "subnetName": {
            "type": "string",
            "defaultValue": "Subnet",
            "metadata": {
                "description": "Subnet name."
            }
        },
        "subnetRange": {
            "type": "string",
            "defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "Subnet IP range."
            }
        },
        "shutdown-status": {
            "type": "string",
            "allowedValues": [
                "Enabled",
                "Disabled"
            ],
            "defaultValue": "Enabled"
        },
        "shutdownHour": {
            "type": "string",
            "defaultValue": "1700"
        },
        "shutdown-timeZone": {
            "type": "string",
            "defaultValue": "W. Europe Standard Time"
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Name of the Administrator of the existing Active Directory Domain"
            }
        },
        "adminPassword": {
            "type": "string",
            "minLength": 12,
            "metadata": {
                "description": "Password for the Administrator account of the existing Active Directory Domain"
            }
        },
        "imageReference": {
            "type": "object",
            "metadata": {
                "description": "description"
            }
        },
        "storageContainerUri": {
            "type": "string",
            "metadata": {
                "description": "description"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "Location of resources that the script is dependent on such as linked templates and DSC modules"
            },
            "defaultValue": "https://raw.githubusercontent.com/gudszent/azure-quickstart-templates/master/!Edited/ad-alwayson-gen2/"
        },
        "_artifactsLocationSasToken": {
            "type": "string",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            },
            "defaultValue": ""
        }
    },
    "variables": {
    },
    "resources": [
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-02-01",
            "name": "[concat(parameters('virtualMachineName'),'-AD','-publicIP')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-02-01",
            "name": "[concat(parameters('virtualMachineName'),'-AD','-nic')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat(parameters('virtualMachineName'),'-AD','-publicIP')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('privateIPAddress')]",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat(parameters('virtualMachineName'),'-VNet'), parameters('subnetName'))]"
                            },
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', concat(parameters('virtualMachineName'),'-AD','-publicIP'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[concat(parameters('virtualMachineName'),'-AD')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat(parameters('virtualMachineName'),'-AD','-nic')]"
            ],
            "properties": {
                "licenseType": "Windows_Server",
                "hardwareProfile": {
                    "vmSize": "[parameters('advmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": "[parameters('imageReference')]",
                    "osDisk": {
                        "name": "[concat(parameters('virtualMachineName'),'-AD_OSDisk')]",
                        "vhd": {
                            "uri": "[concat(parameters('storageContainerUri'), parameters('virtualMachineName'),'-AD','-osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(parameters('virtualMachineName'), '_DataDisk')]",
                            "diskSizeGB": 10,
                            "lun": 0,
                            "vhd": {
                                "uri": "[concat(parameters('storageContainerUri'), parameters('virtualMachineName'),'-AD','-datadisk.vhd')]"
                            },
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('virtualMachineName'),'-AD','-nic'))]"
                        }
                    ]
                }
            },
            "resources": [
                {
                    "type": "extensions",
                    "apiVersion": "2019-03-01",
                    "name": "CreateADForest",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[concat(parameters('virtualMachineName'),'-AD')]"
                    ],
                    "properties": {
                        "publisher": "Microsoft.Powershell",
                        "type": "DSC",
                        "typeHandlerVersion": "2.19",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "ModulesUrl": "[uri(parameters('_artifactsLocation'), concat('dsc/CreateADPDC.zip', parameters('_artifactsLocationSasToken')))]",
                            "ConfigurationFunction": "CreateADPDC.ps1\\CreateADPDC",
                            "Properties": {
                                "DomainName": "[parameters('domainName')]",
                                "AdminCreds": {
                                    "UserName": "[parameters('adminUsername')]",
                                    "Password": "PrivateSettingsRef:AdminPassword"
                                }
                            }
                        },
                        "protectedSettings": {
                            "Items": {
                                "AdminPassword": "[parameters('adminPassword')]"
                            }
                        }
                    }
                },
                {
                    "type": "Microsoft.DevTestLab/schedules",
                    "apiVersion": "2016-05-15",
                    "name": "[concat('shutdown-computevm-', concat(parameters('virtualMachineName'),'-AD'))]",
                    "location": "[parameters('location')]",
                    "dependsOn": [
                        "[concat(parameters('virtualMachineName'),'-AD')]"
                    ],
                    "properties": {
                        "status": "[parameters('shutdown-status')]",
                        "taskType": "ComputeVmShutdownTask",
                        "dailyRecurrence": {
                            "time": "[parameters('shutdownHour')]"
                        },
                        "timeZoneId": "[parameters('shutdown-timeZone')]",
                        "notificationSettings": {
                            "status": "Disabled",
                            "timeInMinutes": 30
                        },
                        "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines', concat(parameters('virtualMachineName'),'-AD'))]"
                    }
                },
                {
                    "type": "Microsoft.Compute/virtualMachines/extensions",
                    "name": "[concat(parameters('virtualMachineName'),'-AD/Antivir')]",
                    "apiVersion": "2019-07-01",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat(parameters('virtualMachineName'),'-AD')]"
                    ],

                    "properties": {
                        "publisher": "Microsoft.Azure.Security",
                        "type": "IaaSAntimalware",
                        "typeHandlerVersion": "1.3",
                        "autoUpgradeMinorVersion": true,
                        "settings": {
                            "AntimalwareEnabled": "false",
                            "RealtimeProtectionEnabled": "false",
                            "ScheduledScanSettings": {
                                "isEnabled": "false",
                                "scanType": "Quick",
                                "day": "7",
                                "time": "120"
                            }
                        },
                        "protectedSettings": null
                    }
                }
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "UpdateVNetDNS",
            "dependsOn": [
                "CreateADForest"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[uri(parameters('_artifactsLocation'), concat('nestedtemplates/vnet-with-dns-server.json', parameters('_artifactsLocationSasToken')))]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "virtualNetworkName": {
                        "value": "[concat(parameters('virtualMachineName'),'-Vnet')]"
                    },
                    "virtualNetworkAddressRange": {
                        "value": "[parameters('virtualNetworkAddressRange')]"
                    },
                    "subnetName": {
                        "value": "[parameters('subnetName')]"
                    },
                    "subnetRange": {
                        "value": "[parameters('subnetRange')]"
                    },
                    "DNSServerAddress": {
                        "value": [
                            "[parameters('privateIPAddress')]"
                        ]
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        }
    ]
}
